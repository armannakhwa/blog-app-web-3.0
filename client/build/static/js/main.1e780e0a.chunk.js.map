{"version":3,"sources":["helpers/setAuthToken.js","redux/actions/auth.js","redux/actions/types.js","redux/actions/todo.js","redux/actions/search.js","redux/actions/pagination.js","redux/actions/tag.js","redux/hooks.js","pages/Homepage.js","pages/layout/NavLinks.js","atoms/Icon.js","atoms/Button.js","pages/layout/Navbar.js","atoms/Input.js","pages/auth/Register.js","pages/auth/Login.js","pages/dashboard/Todo.js","atoms/FlexTable.js","helpers/formatDate.js","atoms/Modal.js","atoms/Pagination.js","pages/dashboard/TodoList.js","pages/dashboard/Search.js","pages/dashboard/PageSize.js","pages/dashboard/Dashboard.js","pages/NotFound.js","pages/routing/PrivateRoute.js","pages/routing/Routes.js","redux/reducers/auth.js","redux/reducers/todo.js","redux/reducers/tag.js","redux/reducers/search.js","redux/reducers/pagination.js","redux/reducers/index.js","redux/store.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","loadUser","async","localStorage","dispatch","type","payload","get","data","err","register","_ref","name","email","password","config","body","JSON","stringify","post","toast","success","errors","response","forEach","error","msg","login","getTodos","statusText","status","getTodo","id","concat","addTodo","formData","deleteTodo","delete","updateTodo","put","toggleCompleteTodo","_id","setSearch","term","filtered","filter","todo","tags","toLowerCase","includes","setPage","page","setPageSize","size","setPageItems","setPageReset","bool","getTags","useAuth","useDispatch","isAuthenticated","loading","user","useSelector","state","auth","shallowEqual","useCallback","arguments","registerUser","loginUser","logoutUser","useTodo","todos","boundGetTodos","boundAddTodo","boundDeleteTodo","boundUpdateTodo","useSearch","isActive","searchTerm","search","setSearchTerm","setLocationChanged","usePagination","activePage","pageSize","pageOfItems","pageReset","pagination","Landing","blogs","setBlogs","useState","expandedBlogId","setExpandedBlogId","useEffect","then","console","log","catch","React","createElement","className","map","blog","key","title","text","slice","onClick","handleExpandClick","blogId","NavLinks","Icon","icon","fixedWidth","color","border","inverse","FontAwesomeIcon","icons","style","cursor","handleOnClick","e","target","parentNode","hasAttribute","getAttribute","mytype","Button","disabled","variant","ButtonB","Header","Input","required","placeholder","autoComplete","onChange","onBlur","onKeyDown","plaintext","readOnly","pClassName","value","as","label","controlId","children","inputTextLeft","inputTextRight","inputTextRightOnClick","minLength","Form","Group","Label","InputGroup","Prepend","Text","Control","Register","setFormData","password2","Redirect","to","Fragment","preventDefault","onSubmit","Link","Login","Todo","description","setModal","tag","tagId","useTags","options","selectedIndex","Card","Body","Row","Title","Col","xs","sm","md","width","isOpen","FlexTable","titleData","iconClick","tableId","item","k","fieldName","i","completed","_title$icons","formatDate","date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","checkZero","length","Date","Modal","modalClose","dialogClassName","centered","ModalB","show","onHide","Paginations","items","initialPage","onChangePage","paginationClass","setActivePage","isSearchActive","paginationReset","setPaginationReset","pager","setPager","getPager","totalPages","startIndex","endIndex","totalItems","currentPage","undefined","Math","ceil","startPage","endPage","min","pages","Array","keys","Pagination","First","Prev","Item","active","Next","Last","TodoList","modal","handleShow","handleClick","Search","PageSize","Number","Dashboard","NotFound","PrivateRoute","component","Component","rest","Route","Object","assign","render","props","Routes","Switch","exact","path","initialState","getItem","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Provider","Router","ToastContainer","newestOnTop","autoClose","Homepage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1e780e0a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"./../../helpers/setAuthToken\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    toast.success(\"You have registered successfully\");\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n\r\n    toast.success(\"You have logined successfully\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\n\r\nexport const GET_TODOS = 'GET_TODOS';\r\nexport const GET_TODOS_SUCCESS = 'GET_TODOS_SUCCESS';\r\nexport const GET_TODOS_ERROR = 'GET_TODOS_ERROR';\r\n\r\nexport const GET_TODO = 'GET_TODO';\r\nexport const GET_TODO_SUCCESS = 'GET_TODO_SUCCESS';\r\nexport const GET_TODO_ERROR = 'GET_TODO_ERROR';\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\r\nexport const ADD_TODO_ERROR = 'ADD_TODO_ERROR';\r\n\r\nexport const TOGGLE_COMPLETE_TODO = 'TOGGLE_COMPLETE_TODO';\r\nexport const TOGGLE_COMPLETE_SUCCESS = 'TOGGLE_COMPLETE_SUCCESS';\r\nexport const TOGGLE_COMPLETE_ERROR = 'TOGGLE_COMPLETE_ERROR';\r\n\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const UPDATE_TODO_SUCCESS = 'UPDATE_TODO_SUCCESS';\r\nexport const UPDATE_TODO_ERROR = 'UPDATE_TODO_ERROR';\r\n\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\r\nexport const DELETE_TODO_ERROR = 'DELETE_TODO_ERROR';\r\n\r\nexport const GET_TAGS = 'GET_TAGS';\r\nexport const GET_TAGS_SUCCESS = 'GET_TAGS_SUCCESS';\r\nexport const GET_TAGS_ERROR = 'GET_TAGS_ERROR';\r\n\r\nexport const SET_SEARCH = 'SET_SEARCH';\r\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\r\nexport const LOCATION_CHANGED = 'LOCATION_CHANGED';\r\n\r\nexport const SET_PAGINATION_PAGE = 'SET_PAGINATION_PAGE';\r\nexport const SET_PAGINATION_ITEMS = 'SET_PAGINATION_ITEMS';\r\nexport const SET_PAGINATION_SIZE = 'SET_PAGINATION_SIZE';\r\nexport const SET_PAGINATION_RESET = 'SET_PAGINATION_RESET';\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  GET_TODOS,\r\n  GET_TODOS_SUCCESS,\r\n  GET_TODOS_ERROR,\r\n  GET_TODO,\r\n  GET_TODO_SUCCESS,\r\n  GET_TODO_ERROR,\r\n  ADD_TODO,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_ERROR,\r\n  DELETE_TODO,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_ERROR,\r\n  UPDATE_TODO,\r\n  UPDATE_TODO_SUCCESS,\r\n  UPDATE_TODO_ERROR,\r\n  TOGGLE_COMPLETE_TODO,\r\n  TOGGLE_COMPLETE_SUCCESS,\r\n  TOGGLE_COMPLETE_ERROR\r\n} from './types';\r\nimport { toast } from 'react-toastify';\r\nimport { loadUser } from './auth';\r\n\r\n// Get All Todos\r\nexport const getTodos = () => async (dispatch) => {\r\n  try {\r\n    dispatch(loadUser());\r\n    dispatch({\r\n      type: GET_TODOS\r\n    });\r\n    const res = await axios.get('/api/todos');\r\n\r\n    dispatch({\r\n      type: GET_TODOS_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TODOS_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get Todo\r\nexport const getTodo = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_TODO\r\n    });\r\n    const res = await axios.get(`/api/todos/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_TODO_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add todo\r\nexport const addTodo = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    dispatch({\r\n      type: ADD_TODO\r\n    });\r\n    const res = await axios.post('/api/todos', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_TODO_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    toast.success('POST added successfully');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: ADD_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete todo\r\nexport const deleteTodo = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: DELETE_TODO\r\n    });\r\n    await axios.delete(`/api/todos/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_TODO_SUCCESS,\r\n      payload: id\r\n    });\r\n\r\n    toast.success('POST deleted successfully');\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Update POST\r\nexport const updateTodo = (formData, id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    dispatch({\r\n      type: UPDATE_TODO\r\n    });\r\n    const res = await axios.put(`/api/todos/${id}`, formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_TODO_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    toast.success('POST updated successfully');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: UPDATE_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Complete or Uncomplete Todo\r\nexport const toggleCompleteTodo = (id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE_TODO\r\n    });\r\n    const res = await axios.put(`/api/todos/complete/${id}`, config);\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE_SUCCESS,\r\n      payload: { status: res.data, _id: id }\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","import { SET_SEARCH_TERM, LOCATION_CHANGED, SET_SEARCH } from './types';\r\n\r\nexport const setSearchTerm = (term) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_SEARCH_TERM,\r\n    payload: { term }\r\n  });\r\n};\r\n\r\nexport const setLocationChanged = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOCATION_CHANGED\r\n  });\r\n};\r\n\r\nexport const setSearch = (term, data) => async (dispatch) => {\r\n  const filtered = data.filter((todo) => {\r\n    return todo.tags[0].name.toLowerCase().includes(term.toLowerCase());\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_SEARCH,\r\n    payload: { filtered }\r\n  });\r\n};\r\n","import { SET_PAGINATION_PAGE, SET_PAGINATION_SIZE, SET_PAGINATION_ITEMS, SET_PAGINATION_RESET } from './types';\r\n\r\nexport const setPage = (page) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_PAGE,\r\n    payload: page\r\n  });\r\n};\r\n\r\nexport const setPageSize = (size) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_SIZE,\r\n    payload: size\r\n  });\r\n};\r\n\r\nexport const setPageItems = (size) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_ITEMS,\r\n    payload: size\r\n  });\r\n};\r\n\r\nexport const setPageReset = (bool) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_RESET,\r\n    payload: bool\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\nGET_TAGS,\r\nGET_TAGS_SUCCESS,\r\nGET_TAGS_ERROR\r\n} from \"./types\";\r\n\r\n// Get All Todos\r\nexport const getTags = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_TAGS,\r\n    });\r\n    const res = await axios.get(\"/api/tags\");\r\n\r\n    dispatch({\r\n      type: GET_TAGS_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TAGS_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux';\r\nimport { loadUser, register, login, logout } from './actions/auth';\r\nimport {\r\n  getTodos,\r\n  addTodo,\r\n  deleteTodo,\r\n  updateTodo,\r\n  getTodo,\r\n  toggleCompleteTodo\r\n} from './actions/todo';\r\nimport { setSearch, setSearchTerm, setLocationChanged } from './actions/search';\r\nimport { setPage, setPageItems, setPageSize, setPageReset } from './actions/pagination';\r\n\r\nimport { getTags } from './actions/tag';\r\n\r\nexport function useAuth() {\r\n  const dispatch = useDispatch();\r\n  const { token, isAuthenticated, loading, user } = useSelector(\r\n    (state) => ({\r\n      token: state.auth.token,\r\n      isAuthenticated: state.auth.isAuthenticated,\r\n      loading: state.auth.loading,\r\n      user: state.auth.user\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundLoadUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(loadUser(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundRegisterUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(register(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundLoginUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(login(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundLogoutUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(logout(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    token,\r\n    isAuthenticated,\r\n    loading,\r\n    user,\r\n    loadUser: boundLoadUser,\r\n    registerUser: boundRegisterUser,\r\n    loginUser: boundLoginUser,\r\n    logoutUser: boundLogoutUser\r\n  };\r\n}\r\n\r\nexport function useTodo() {\r\n  const dispatch = useDispatch();\r\n  const { todos, todo, loading, error } = useSelector(\r\n    (state) => ({\r\n      todos: state.todo.todos,\r\n      todo: state.todo.todo,\r\n      loading: state.todo.loading,\r\n      error: state.todo.error\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundGetTodos = useCallback(\r\n    (...args) => {\r\n      return dispatch(getTodos(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundAddTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(addTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundDeleteTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(deleteTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundUpdateTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(updateTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundGetTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(getTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundToggleCompleteTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(toggleCompleteTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    todos,\r\n    todo,\r\n    loading,\r\n    error,\r\n    getTodos: boundGetTodos,\r\n    getTodo: boundGetTodo,\r\n    addTodo: boundAddTodo,\r\n    deleteTodo: boundDeleteTodo,\r\n    updateTodo: boundUpdateTodo,\r\n    toggleCompleteTodo: boundToggleCompleteTodo\r\n  };\r\n}\r\n\r\nexport function useTags() {\r\n  const dispatch = useDispatch();\r\n  const { tags, loading, error } = useSelector(\r\n    (state) => ({\r\n      tags: state.tag.tags,\r\n      loading: state.tag.loading,\r\n      error: state.tag.error\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundGetTags = useCallback(\r\n    (...args) => {\r\n      return dispatch(getTags(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    tags,\r\n    loading,\r\n    error,\r\n    getTags: boundGetTags\r\n  };\r\n}\r\n\r\n//+++++++++++++++++++++++++ SEARCH TODOS +++++++++++++++++++++++++++++++++++++\r\n\r\nexport function useSearch() {\r\n  const dispatch = useDispatch();\r\n  const { isActive, searchTerm, filtered } = useSelector(\r\n    (state) => ({\r\n      searchTerm: state.search.searchTerm,\r\n      isActive: state.search.isActive,\r\n      filtered: state.search.filtered\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundSetSearchTerm = useCallback(\r\n    (term, type) => {\r\n      return dispatch(setSearchTerm(term, type));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundSetSearch = useCallback(\r\n    (...args) => {\r\n      return dispatch(setSearch(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundSetLocationChanged = useCallback(\r\n    (...args) => {\r\n      return dispatch(setLocationChanged(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    filtered,\r\n    setSearchTerm: boundSetSearchTerm,\r\n    setSearch: boundSetSearch,\r\n    setLocationChanged: boundSetLocationChanged,\r\n    isActive,\r\n    searchTerm\r\n  };\r\n}\r\n\r\n//+++++++++++++++++++++++++ PAGINATION +++++++++++++++++++++++++++++++++++++\r\nexport function usePagination() {\r\n  const dispatch = useDispatch();\r\n  const { activePage, pageSize, pageOfItems, pageReset } = useSelector(\r\n    (state) => ({\r\n      activePage: state.pagination.activePage,\r\n      pageSize: state.pagination.pageSize,\r\n      pageOfItems: state.pagination.pageOfItems,\r\n      pageReset: state.pagination.pageReset\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundSetPageSize = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPageSize(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundSetPage = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPage(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundSetPageItems = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPageItems(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundSetPageReset = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPageReset(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  return {\r\n    activePage,\r\n    pageSize,\r\n    pageOfItems,\r\n    pageReset,\r\n    setPageSize: boundSetPageSize,\r\n    setPage: boundSetPage,\r\n    setPageItems: boundSetPageItems,\r\n    setPageReset: boundSetPageReset\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../redux/hooks\";\r\nimport axios from \"axios\";\r\n\r\nconst Landing = () => {\r\n  // const { isAuthenticated } = useAuth();\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [expandedBlogId, setExpandedBlogId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch blogs from your API using Axios\r\n    axios.get(\"/api/todos/allblogs\")\r\n      .then(response => {\r\n        setBlogs(response.data);\r\n        console.log(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching blogs:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleExpandClick = (blogId) => {\r\n    setExpandedBlogId(blogId);\r\n  };\r\n\r\n  // if (isAuthenticated) {\r\n  //   return <Redirect to=\"/dashboard\" />;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1 className=\"mb-4\">Blog App 3.0</h1>\r\n      {blogs.map(blog => (\r\n        <div key={blog._id} className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title\">{blog.title}</h3>\r\n            {expandedBlogId === blog._id ? (\r\n              <p className=\"card-text\">{blog.text}</p>\r\n            ) : (\r\n              <p className=\"card-text\">{blog.text.slice(0, 2)}</p>\r\n            )}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => handleExpandClick(blog._id)}\r\n            >\r\n              {expandedBlogId === blog.id ? \"Show Less\" : \"Read More\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { useAuth } from './../../redux/hooks';\r\nimport Spinner from './../../atoms/Spinner';\r\n\r\nconst NavLinks = () => {\r\n  const { isAuthenticated, logoutUser, user, loading } = useAuth();\r\n\r\n  return loading ? (\r\n    <div className=\"position-absolute\" style={{ top: '50%', left: '50%' }}>\r\n      <Spinner animation=\"grow\" />\r\n    </div>\r\n  ) : (\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      {isAuthenticated && (\r\n        <>\r\n          <Nav className=\"ml-12\"></Nav>\r\n          <Nav>\r\n            <NavDropdown title={'Signed in: ' + user?.name} id=\"navbar-nav-dropdown\">\r\n              <NavDropdown.Item as={Link} to=\"/\" onClick={() => {\r\n\r\n                logoutUser()\r\n                }}>Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </>\r\n      )}\r\n      {!isAuthenticated && (\r\n        <Nav>\r\n          <Nav.Link className='ml-5' as={Link} to=\"/login\">\r\n            Login\r\n          </Nav.Link>\r\n        </Nav>\r\n      )}\r\n    </Navbar.Collapse>\r\n  );\r\n};\r\nexport default NavLinks;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as icons from '@fortawesome/free-solid-svg-icons';\r\nexport default function Icon({\r\n  icon,\r\n  onClick,\r\n  name,\r\n  id,\r\n  fixedWidth,\r\n  size,\r\n  color,\r\n  border,\r\n  inverse\r\n}) {\r\n  const handleOnClick = (e, icon) => {\r\n    onClick(\r\n      e,\r\n      e.target.parentNode.hasAttribute('mytype')\r\n        ? e.target.parentNode.getAttribute('id')\r\n        : e.target.getAttribute('id'),\r\n      name\r\n    );\r\n  };\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon={icons[icon]}\r\n      style={{ cursor: 'pointer' }}\r\n      onClick={handleOnClick}\r\n      id={id}\r\n      mytype=\"my-type\"\r\n      name={name}\r\n      size={size}\r\n      border={border}\r\n      color={color}\r\n      fixedWidth={fixedWidth}\r\n      inverse={inverse}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button as ButtonB } from 'react-bootstrap';\r\nimport Icon from './Icon';\r\n\r\nexport default function Button({\r\n  id,\r\n  text,\r\n  disabled = false,\r\n  onClick = undefined,\r\n  type = 'button',\r\n  className,\r\n  variant,\r\n  color,\r\n  icon,\r\n  size\r\n}) {\r\n  return (\r\n    <ButtonB\r\n      id={id}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      type={type}\r\n      variant={variant}\r\n      size={size}\r\n      color={color}\r\n      className={className}\r\n    >\r\n      {icon && <Icon icon={icon} />}\r\n      <span>{text}</span> \r\n    </ButtonB>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport NavLinks from './NavLinks';\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from './../../atoms/Button';\r\nimport './Navbar.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar className=\"todo-app-navbar\" collapseOnSelect expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          <center>\r\n          <img\r\n            className=\"tv2z-logo\"\r\n            alt=\"TV2Z\"\r\n            src='./logo.png'\r\n          />\r\n          </center>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        <NavLinks />\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\n\r\nexport default function Input({\r\n  id,\r\n  name,\r\n  type = 'text',\r\n  required = false,\r\n  placeholder,\r\n  autoComplete,\r\n  onChange = undefined,\r\n  onClick = undefined,\r\n  onBlur = undefined,\r\n  onKeyDown = undefined,\r\n  plaintext = false,\r\n  readOnly = false,\r\n  className,\r\n  pClassName,\r\n  value,\r\n  disabled = false,\r\n  as,\r\n  label,\r\n  size,\r\n  controlId,\r\n  children,\r\n  error,\r\n  inputTextLeft,\r\n  inputTextRight,\r\n  inputTextRightOnClick,\r\n  minLength\r\n}) {\r\n  return (\r\n    <Form.Group className={pClassName} controlId={controlId}>\r\n      <Form.Label>\r\n        {label}\r\n        {error}\r\n      </Form.Label>\r\n      <InputGroup>\r\n        <InputGroup.Prepend>\r\n          {inputTextLeft && (\r\n            <InputGroup.Text className=\"py-0\">{inputTextLeft}</InputGroup.Text>\r\n          )}\r\n        </InputGroup.Prepend>\r\n        <Form.Control\r\n          as={as}\r\n          id={id}\r\n          name={name}\r\n          type={type}\r\n          required={required}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          onClick={onClick}\r\n          onBlur={onBlur}\r\n          onKeyDown={onKeyDown}\r\n          className={className}\r\n          disabled={disabled}\r\n          size={size}\r\n          value={value}\r\n          readOnly={readOnly}\r\n          plaintext={plaintext}\r\n          autoComplete={autoComplete}\r\n          minLength={minLength}\r\n        >\r\n          {children}\r\n        </Form.Control>\r\n        <InputGroup.Prepend onClick={inputTextRightOnClick}>\r\n          {inputTextRight && (\r\n            <InputGroup.Text className=\"py-0\">{inputTextRight}</InputGroup.Text>\r\n          )}\r\n        </InputGroup.Prepend>\r\n      </InputGroup>\r\n    </Form.Group>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\nimport Button from './../../atoms/Button';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Register = () => {\r\n  const { registerUser, isAuthenticated } = useAuth();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      toast.error('Passwords do not match');\r\n    } else {\r\n      registerUser({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Create Your Account\r\n      </p>\r\n      <Form>\r\n        <Input\r\n          label=\"Name\"\r\n          id=\"register-name\"\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <Input\r\n          label=\"Email\"\r\n          id=\"register-email\"\r\n          type=\"email\"\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Email Address\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <Input\r\n          label=\"Password\"\r\n          id=\"register-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"password\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Create a password\"\r\n          autoComplete=\"off\"\r\n          minLength=\"6\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          id=\"register-password-2\"\r\n          type=\"password\"\r\n          value={password2}\r\n          name=\"password2\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Confirm Password\"\r\n          autoComplete=\"off\"\r\n          minLength=\"6\"\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          text=\"Register\"\r\n          onClick={(e) => onSubmit(e)}\r\n          color=\"white\"\r\n          type=\"submit\"\r\n          className={`float-right`}\r\n          id=\"user-register-button\"\r\n        />\r\n      </Form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useAuth } from './../../redux/hooks';\r\nimport Input from './../../atoms/Input';\r\nimport Button from './../../atoms/Button';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Login = () => {\r\n  const { loginUser, isAuthenticated } = useAuth();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    loginUser(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Sign Into Your Account\r\n      </p>\r\n\r\n      <Form>\r\n        <Input\r\n          label=\"Email\"\r\n          id=\"login-email\"\r\n          type=\"email\"\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Email Address\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          id=\"login-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"password\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Enter your password\"\r\n          autoComplete=\"off\"\r\n          minLength=\"6\"\r\n        />\r\n        <Button\r\n          variant=\"info\"\r\n          text=\"Login\"\r\n          onClick={(e) => onSubmit(e)}\r\n          color=\"white\"\r\n          type=\"submit\"\r\n          className={` float-right`}\r\n          id=\"user-login-button\"\r\n        />\r\n      </Form>\r\n      <p className=\"my-1\">\r\n       <b> DEMO account</b> email: admin@armannakhwa.cf <br></br> password: 12345678\r\n      </p>\r\n      <br></br><br></br>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Col, Row, Card } from 'react-bootstrap';\r\nimport { useTodo, useTags } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\nimport Button from './../../atoms/Button';\r\n\r\nconst Todo = ({ description, setModal }) => {\r\n  const { addTodo, todo, loading, updateTodo } = useTodo();\r\n  const [formData, setFormData] = useState({\r\n    tag: !loading && description === 'Update' ? todo.tags[0].name : 'POST',\r\n    tagId: !loading && description === 'Update' ? todo.tags[0]._id : '655b5abe61963e5f9766c256',\r\n    text: !loading && description === 'Update' ? todo.text : '',\r\n    title: !loading && description === 'Update' ? todo.title : ''\r\n  });\r\n\r\n  const { getTags, tags } = useTags();\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n  }, [getTags]);\r\n\r\n  const {title, text, tag, tagId } = formData;\r\n\r\n  const onChange = (e) => {\r\n    return setFormData(\r\n      e.target.name === 'tag' && tagId !== '655b5abe61963e5f9766c2526'\r\n        ? {\r\n            ...formData,\r\n            tagId: e.target.options[e.target.options.selectedIndex].getAttribute(\r\n              'option-id'\r\n            ),\r\n            tag: e.target.value\r\n          }\r\n        : { ...formData, [e.target.name]: e.target.value }\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    description === 'Add' && addTodo({title, text, tagId, tag });\r\n    description === 'Update' && updateTodo({ title,text, tagId, tag }, todo._id);\r\n    setModal({ isOpen: false });\r\n  };\r\n  return loading ? (\r\n    <h2>Loading</h2>\r\n  ) : (\r\n    <Card className=\"todo-form p-4\">\r\n      <Card.Body>\r\n        <Row className=\"d-flex justify-content-between align-items-center mb-5\">\r\n          <Card.Title>{description} POST</Card.Title>\r\n\r\n          <Row className=\"d-flex justify-content-between flex-nowrap\"></Row>\r\n        </Row>\r\n        <Form>\r\n          <Form.Row>\r\n            <Col xs={12} sm={12} md={8}>\r\n              <Input\r\n                label=\"Title\"\r\n                id=\"todo-title\"\r\n                type=\"text\"\r\n                value={title}\r\n                name=\"title\"\r\n                onChange={(e) => onChange(e)}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} sm={12} md={8}>\r\n              <b>Content</b>\r\n              <textarea\r\n                label=\"Content\"\r\n                id=\"todo-text\"\r\n                type=\"text\"\r\n                value={text}\r\n                style={{width:\"269px\"}}\r\n                name=\"text\"\r\n                onChange={(e) => onChange(e)}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} sm={12} md={4}>\r\n              {/* <Input\r\n                as=\"select\"\r\n                label=\"POST Tag\"\r\n                id={`todo-tag-${description}`}\r\n                type=\"text\"\r\n                value={tag}\r\n                onChange={(e) => onChange(e)}\r\n                name=\"tag\"\r\n                autoComplete=\"off\"\r\n                pClassName={tagId === '655b5abe61963e5f9766c256' ? 'd-none' : ''}\r\n              > \r\n                {tags.map((tag) => {\r\n                  return (\r\n                    <option\r\n                      disabled={tag._id === '655b5abe61963e5f9766c256'}\r\n                      option-id={tag._id}\r\n                      key={tag._id}\r\n                    >\r\n                      {tag.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Input>\r\n              */}\r\n              {/* <Input\r\n                inputTextRight=\"X\"\r\n                inputTextRightOnClick={() => {\r\n                  setFormData({ ...formData, tag: '', tagId: '' });\r\n                }}\r\n                label=\"Create a Tag\"\r\n                id={`todo-tag-other-${description}`}\r\n                type=\"text\"\r\n                pClassName={tagId !== '655b5abe61963e5f9766c256' ? 'd-none' : 'd-block'}\r\n                value={tagId === '655b5abe61963e5f9766c256' ? tag : ''}\r\n                onChange={\r\n                  tagId === '655b5abe61963e5f9766c256' ? (e) => onChange(e) : () => {}\r\n                }\r\n                name=\"tag\"\r\n                autoComplete=\"off\"\r\n              /> */}\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Button\r\n            variant=\"secondary\"\r\n            text={description === 'Update' ? 'Update POST' : 'Add POST'}\r\n            onClick={(e) => onSubmit(e)}\r\n            color=\"white\"\r\n            type=\"submit\"\r\n            className=\"float-right\"\r\n            id={`todo-update-add-button-${description}`}\r\n          />\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport './FlexTable.css';\r\nimport Icon from './Icon';\r\nimport { formatDate } from './../helpers/formatDate';\r\n\r\nconst FlexTable = ({ titleData = [], data = [], iconClick, tableId }) => {\r\n  return (\r\n    <div id={`${tableId}`} className={`flexTable flexTable--5cols flexTable--collapse `}>\r\n      <div className=\"flexTable-row flexTable-row--head\">\r\n        <div className=\"flexTable-row flexTable-row--head\">\r\n          {titleData.map((item, k) => (\r\n            <div\r\n              key={k}\r\n              className={`flexTable-cell ${item.fieldName}-cell column-heading`}\r\n            >\r\n              {' '}\r\n              {item.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {data.map((item, i) => (\r\n        <React.Fragment key={'row' + i}>\r\n          <div className={`flexTable-row ${item.completed ? 'flexTable-row-completed' : ''}`}>\r\n            {titleData.map((title, k) => {\r\n              if (title.fieldName === 'date') {\r\n                return (\r\n                  <div\r\n                    className={`flexTable-cell ${title.fieldName}-cell`}\r\n                    key={'column' + k}\r\n                  >\r\n                    <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                    <div className={`flexTable-cell--content ${title.fieldName}-content`}>\r\n                      {title.fieldName === 'date' && formatDate(new Date(`${item.date}`))}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              if (title.fieldName === 'tags') {\r\n                return (\r\n                  <div\r\n                    className={`flexTable-cell ${title.fieldName}-cell`}\r\n                    key={'column' + k}\r\n                  >\r\n                    <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                    {item.tags.map((tag) => (\r\n                      <div key={tag._id} className={`flexTable-cell--content ${title.fieldName}-content`}>{tag.name}</div>\r\n                    ))}\r\n                  </div>\r\n                );\r\n              }\r\n              if (item[title.fieldName]) {\r\n                return (\r\n                  <div\r\n                    className={`flexTable-cell ${title.fieldName}-cell`}\r\n                    key={'column' + k}\r\n                  >\r\n                    <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                    <div className={`flexTable-cell--content ${title.fieldName}-content`}>\r\n                      {item[title.fieldName]}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <div\r\n                  className={`flexTable-cell ${title.fieldName}-cell`}\r\n                  key={`icon${k + k}`}\r\n                  name={item.id}\r\n                >\r\n                  <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                  <div className={`flexTable-cell--content ${title.fieldName}-content`}>\r\n                    {title.icons?.map((icon, i) => (\r\n                      <Icon\r\n                        key={i}\r\n                        name={item._id}\r\n                        icon={'fa' + icon}\r\n                        onClick={iconClick}\r\n                        id={icon}\r\n                        size={'1x'}\r\n                        fixedWidth\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexTable;\r\n","export const formatDate = (date, type) => {\r\n  let day = date.getDate() + '';\r\n  let month = date.getMonth() + 1 + '';\r\n  let year = date.getFullYear() + '';\r\n  let hour = date.getHours() + '';\r\n  let minutes = date.getMinutes() + '';\r\n\r\n  const checkZero = (data) => {\r\n    if (data.length === 1) {\r\n      data = '0' + data;\r\n    }\r\n    return data;\r\n  };\r\n  day = checkZero(day);\r\n  month = checkZero(month);\r\n  year = checkZero(year);\r\n  hour = checkZero(hour);\r\n  minutes = checkZero(minutes);\r\n\r\n  if (type === 'onlyDate') {\r\n    return day + '/' + month + '/' + year + ' ';\r\n  }\r\n\r\n  return day + '/' + month + '/' + year + ' ' + hour + ':' + minutes;\r\n};\r\n","import React from 'react';\r\nimport { Modal as ModalB } from 'react-bootstrap';\r\nimport './Modal.css'\r\n\r\nconst Modal = ({ children, isOpen, modalClose, dialogClassName, centered }) => {\r\n  return (\r\n    <>\r\n      <ModalB dialogClassName={dialogClassName} centered={centered} show={isOpen} onHide={modalClose}>\r\n        {children}\r\n      </ModalB>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport './Pagination.css';\r\n\r\nconst Paginations = ({\r\n  items,\r\n  pageSize,\r\n  initialPage = 1,\r\n  onChangePage,\r\n  paginationClass,\r\n  setActivePage,\r\n  isSearchActive,\r\n  activePage,\r\n  paginationReset,\r\n  setPaginationReset\r\n}) => {\r\n  const [pager, setPager] = useState({});\r\n\r\n  const setPage = useCallback(\r\n    (page, size) => {\r\n      // get new pager object for specified page\r\n      const pager = getPager(items.length, page, size);\r\n\r\n      if ((page < 1 || page > pager.totalPages) && !isSearchActive) {\r\n        return;\r\n      }\r\n      // get new page of items from items array\r\n      const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n      setActivePage(page);\r\n      // update state\r\n      setPager(pager);\r\n\r\n      // call change page function in parent component\r\n      onChangePage(pageOfItems);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [items]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // set page if items array isn't empty\r\n    if ((items && items.length) || isSearchActive) {\r\n      if (paginationReset) {\r\n        setPage(initialPage, pageSize);\r\n      } else {\r\n        setPage(activePage, pageSize);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [initialPage, isSearchActive, items, pageSize, setPage]);\r\n\r\n  const getPager = (totalItems, currentPage = 1, pageSize) => {\r\n    // calculate total pages\r\n    const totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    let startPage, endPage;\r\n    if (totalPages <= 6) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 4) {\r\n        startPage = 1;\r\n        endPage = 7;\r\n      } else if (currentPage + 3 >= totalPages) {\r\n        startPage = totalPages - 6;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 3;\r\n        endPage = currentPage + 3;\r\n      }\r\n    }\r\n    // start and end item indexes\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages\r\n\r\n    const pages = [...Array(endPage + 1 - startPage).keys()].map((i) => {\r\n      if (i === 0) {\r\n        return { page: 1, value: true };\r\n      }\r\n      if (currentPage >= 5 && i === 1) {\r\n        return { page: startPage + i, value: false };\r\n      }\r\n      if (currentPage + 3 >= totalPages && i >= 4) {\r\n        return { page: startPage + i, value: true };\r\n      }\r\n      if (i < 5) {\r\n        return { page: startPage + i, value: true };\r\n      }\r\n      if (i < 6) {\r\n        return { page: startPage + i, value: false };\r\n      }\r\n      if (i === 6) {\r\n        return { page: totalPages, value: true };\r\n      }\r\n    });\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages\r\n    };\r\n  };\r\n  if (!pager.pages || pager.pages.length <= 1) {\r\n    // don't display pager if there is only 1 page\r\n    return null;\r\n  }\r\n  return (\r\n    <Pagination className={`${paginationClass}`}>\r\n      <Pagination.First onClick={() => setPage(1, pager.pageSize)} />\r\n      <Pagination.Prev\r\n        onClick={() => {\r\n          setPaginationReset(true);\r\n          setPage(pager.currentPage - 1, pager.pageSize);\r\n        }}\r\n      />\r\n\r\n      {pager.pages.map((page, i) => (\r\n        <Pagination.Item\r\n          active={page.value && pager.currentPage === page.page}\r\n          key={'page' + i}\r\n          onClick={() => {\r\n            setPaginationReset(true);\r\n            page.value && setPage(page.page, pager.pageSize);\r\n          }}\r\n          className={!page.value ? 'disabled' : ''}\r\n        >\r\n          {page.value ? page.page : '...'}\r\n        </Pagination.Item>\r\n      ))}\r\n\r\n      <Pagination.Next\r\n        onClick={() => {\r\n          setPaginationReset(true);\r\n          setPage(pager.currentPage + 1, pager.pageSize);\r\n        }}\r\n      />\r\n      <Pagination.Last onClick={() => setPage(pager.totalPages, pager.pageSize)} />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default Paginations;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useTodo, useSearch, usePagination } from './../../redux/hooks';\r\n\r\nimport Todo from './Todo';\r\n\r\nimport FlexTable from './../../atoms/FlexTable';\r\nimport Modal from './../../atoms/Modal';\r\nimport Button from './../../atoms/Button';\r\nimport Pagination from './../../atoms/Pagination';\r\nimport './TodoList.css';\r\n\r\nconst title = [\r\n  {\r\n    title: 'Title',\r\n    fieldName: 'title',\r\n    className: 'col-xs-2'\r\n  },\r\n  {\r\n    title: 'Content',\r\n    fieldName: 'text',\r\n    className: 'col-xs-2'\r\n  },\r\n  {\r\n    title: 'Created At',\r\n    fieldName: 'date',\r\n    className: 'col-xs-3'\r\n  },\r\n\r\n  {\r\n    title: '',\r\n    fieldName: 'icon',\r\n\r\n    icons: ['Edit', 'Check', 'TrashAlt'],\r\n    className: 'col-xs-3'\r\n  }\r\n];\r\n\r\nconst TodoList = () => {\r\n  const { todos, getTodos, deleteTodo, getTodo, toggleCompleteTodo } = useTodo();\r\n\r\n  const { filtered, isActive, searchTerm, setSearch } = useSearch();\r\n  const {\r\n    activePage,\r\n    pageSize,\r\n    pageOfItems,\r\n    setPageItems,\r\n    setPage,\r\n    pageReset,\r\n    setPageReset\r\n  } = usePagination();\r\n\r\n  //Modal States\r\n  const [modal, setModal] = useState({\r\n    isOpen: false,\r\n    type: '',\r\n    id: ''\r\n  });\r\n\r\n  // Fetch All Todos\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, [getTodos]);\r\n\r\n  // Clientside Todo Search\r\n  useEffect(() => {\r\n    searchTerm && setSearch(searchTerm, todos);\r\n  }, [searchTerm, setSearch, todos]);\r\n\r\n  //Modal Handlers\r\n\r\n  const handleShow = (type, id) => async (e) => {\r\n    e.preventDefault();\r\n    if (type === 'add') {\r\n      setModal({\r\n        isOpen: true,\r\n        type: 'Add'\r\n      });\r\n    }\r\n\r\n    if (type === 'update') {\r\n      await getTodo(id);\r\n      setModal({\r\n        isOpen: true,\r\n        type: 'Update',\r\n        id: id\r\n      });\r\n    }\r\n  };\r\n\r\n  // Icon Handlers\r\n  const handleClick = (e, icon, id) => {\r\n    switch (icon) {\r\n      case 'Check':\r\n        setPageReset(false);\r\n        toggleCompleteTodo(id);\r\n        break;\r\n      case 'Edit':\r\n        setPageReset(false);\r\n        handleShow('update', id)(e);\r\n        break;\r\n      case 'TrashAlt':\r\n        setPageReset(true);\r\n        deleteTodo(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={modal.isOpen}\r\n        modalClose={() => setModal({ isOpen: false })}\r\n        centered={true}\r\n      >\r\n        {modal.type === 'Add' && <Todo description=\"Add\" setModal={setModal} />}\r\n        {modal.type === 'Update' && <Todo description=\"Update\" setModal={setModal} />}\r\n      </Modal>\r\n      <Button\r\n        text=\"Add Blog\"\r\n        onClick={handleShow('add')}\r\n        color=\"white\"\r\n        type=\"submit\"\r\n        className=\"float-right mb-2 todo-button add-todo-button\"\r\n        id=\"user-register-button\"\r\n      />\r\n\r\n      {todos.length === 0 ? (\r\n        <h2 className=\"m-5 lead\">\r\n          {' '}\r\n          You don't have any blogs. Click the button to add a posts!{' '}\r\n        </h2>\r\n      ) : (\r\n        <FlexTable\r\n          data={pageOfItems}\r\n          titleData={title}\r\n          iconClick={(e, icon, id) => handleClick(e, icon, id)}\r\n          tableId={'todo-list-flex-table'}\r\n        />\r\n      )}\r\n\r\n      <Pagination\r\n        id={'todo-list-table-pagination'}\r\n        items={isActive ? filtered : todos}\r\n        onChangePage={setPageItems}\r\n        setActivePage={setPage}\r\n        pageSize={pageSize}\r\n        activePage={activePage}\r\n        isSearchActive={isActive}\r\n        paginationClass=\"todo-list-table-pagination d-flex justify-content-center align-items-center\"\r\n        paginationReset={pageReset}\r\n        setPaginationReset={setPageReset}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSearch, usePagination } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\n\r\nconst Search = () => {\r\n  const { setSearchTerm, searchTerm, isActive } = useSearch();\r\n  const { setPageReset } = usePagination();\r\n  const handleChange = (e) => {\r\n    setPageReset(true);\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      placeholder=\"search by tag\"\r\n      className=\"border-top-0 border-left-0 border-right-0\"\r\n      pClassName=\"ml-4\"\r\n      onChange={handleChange}\r\n      value={isActive ? searchTerm : ''}\r\n      id={'search-todo-tag-input'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { usePagination } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\n\r\nconst PageSize = () => {\r\n  // Search State\r\n  const { setPageSize, pageSize } = usePagination();\r\n\r\n  const handleChange = (e) => {\r\n    setPageSize(Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      id=\"pageSize\"\r\n      type=\"text\"\r\n      placeholder=\"search\"\r\n      className=\"border-top-0 border-left-0 border-right-0\"\r\n      onChange={handleChange}\r\n      value={pageSize}\r\n      as=\"select\"\r\n    >\r\n      <option>10</option>\r\n      <option>20</option>\r\n      <option>30</option>\r\n      <option>40</option>\r\n      <option>50</option>\r\n    </Input>\r\n  );\r\n};\r\n\r\nexport default PageSize;\r\n","import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport Search from './Search';\r\n\r\nimport PageSize from './PageSize';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex \">\r\n        <PageSize />\r\n        <Search />\r\n      </div>\r\n      <TodoList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./../../redux/hooks\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to=\"/admin-login\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Dashboard from './../dashboard/Dashboard';\r\nimport NotFound from './../NotFound';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Switch>\r\n        <Route exact path=\"/admin-register\" component={Register} />\r\n        <Route exact path=\"/admin-login\" component={Login} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: false,\r\n  user: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TODOS,\r\n  GET_TODOS_SUCCESS,\r\n  GET_TODOS_ERROR,\r\n  GET_TODO,\r\n  GET_TODO_SUCCESS,\r\n  GET_TODO_ERROR,\r\n  ADD_TODO,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_ERROR,\r\n  DELETE_TODO,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_ERROR,\r\n  UPDATE_TODO,\r\n  UPDATE_TODO_SUCCESS,\r\n  UPDATE_TODO_ERROR,\r\n  TOGGLE_COMPLETE_TODO,\r\n  TOGGLE_COMPLETE_SUCCESS,\r\n  TOGGLE_COMPLETE_ERROR,\r\n  CLEAR_PROFILE\r\n} from './../actions/types';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  todo: {},\r\n  loading: false,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_TODOS:\r\n    case GET_TODO:\r\n    case ADD_TODO:\r\n    case DELETE_TODO:\r\n    case UPDATE_TODO:\r\n    case TOGGLE_COMPLETE_TODO:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADD_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: [payload, ...state.todos],\r\n        loading: false\r\n      };\r\n    case GET_TODOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: payload,\r\n        loading: false\r\n      };\r\n    case GET_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todo: payload,\r\n        loading: false\r\n      };\r\n    case GET_TODOS_ERROR:\r\n    case GET_TODO_ERROR:\r\n    case ADD_TODO_ERROR:\r\n    case DELETE_TODO_ERROR:\r\n    case UPDATE_TODO_ERROR:\r\n    case TOGGLE_COMPLETE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case DELETE_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo._id !== payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo._id === payload._id ? { ...payload } : todo\r\n        ),\r\n        loading: false\r\n      };\r\n    case TOGGLE_COMPLETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo._id === payload._id ? { ...todo, completed: payload.status } : todo\r\n        ),\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        todos: [],\r\n        todo: {},\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TAGS,\r\n  GET_TAGS_SUCCESS,\r\n  GET_TAGS_ERROR,\r\n  CLEAR_PROFILE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  tags: [],\r\n  loading: false,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_TAGS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_TAGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tags: payload,\r\n        loading: false\r\n      };\r\n    case GET_TAGS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        tags: [],\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_SEARCH_TERM,\r\n  LOCATION_CHANGED,\r\n  SET_SEARCH,\r\n  CLEAR_PROFILE\r\n} from './../actions/types';\r\n\r\nconst initialState = {\r\n  isActive: null,\r\n  searchTerm: '',\r\n  filtered: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        filtered: payload.filtered\r\n      };\r\n    case SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        isActive: payload.term ? true : null,\r\n        searchTerm: payload.term,\r\n        filtered: payload.term ? state.filtered : []\r\n      };\r\n    case LOCATION_CHANGED:\r\n      return initialState;\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        isActive: null,\r\n        searchTerm: '',\r\n        filtered: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_PAGINATION_PAGE,\r\n  SET_PAGINATION_ITEMS,\r\n  SET_PAGINATION_SIZE,\r\n  SET_PAGINATION_RESET,\r\n  CLEAR_PROFILE\r\n} from './../actions/types';\r\n\r\nconst initialState = {\r\n  activePage: null,\r\n  pageSize: 10,\r\n  pageOfItems: [],\r\n  pageReset: true\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_PAGINATION_PAGE:\r\n      return {\r\n        ...state,\r\n        activePage: payload\r\n      };\r\n    case SET_PAGINATION_ITEMS:\r\n      return {\r\n        ...state,\r\n        pageOfItems: payload\r\n      };\r\n\r\n    case SET_PAGINATION_SIZE:\r\n      return {\r\n        ...state,\r\n        pageSize: payload\r\n      };\r\n    case SET_PAGINATION_RESET:\r\n      return {\r\n        ...state,\r\n        pageReset: payload\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        activePage: null,\r\n        pageSize: 10,\r\n        pageOfItems: [],\r\n        pageReset: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport todo from './todo';\r\nimport tag from './tag';\r\nimport search from './search';\r\nimport pagination from './pagination';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  todo,\r\n  tag,\r\n  search,\r\n  pagination\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n//Components\r\nimport Homepage from './pages/Homepage';\r\nimport Navbar from './pages/layout/Navbar';\r\n\r\nimport Routes from './pages/routing/Routes';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { loadUser } from './redux/actions/auth';\r\n\r\nimport setAuthToken from './helpers/setAuthToken';\r\nimport './App.css';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <>\r\n          {/* <Navbar/> */}\r\n          {/* <LatestNews/> */}\r\n          <ToastContainer newestOnTop autoClose={2000} />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}